#!/usr/bin/env python3
import re
import os
import argparse

def replace_wikilinks_with_content(input_file, output_file, keep_wikilinks, keep_citations):
    # Read the original markdown file
    with open(input_file, 'r', encoding='utf-8') as file:
        content = file.read()

    # Regular expression to find wikilinks, excluding those containing @
    wikilink_pattern = r'(?<!@)\[\[([^@\]]+)\]\]'

    # Function to replace a wikilink with the content of the linked file
    def replace_link(match):
        link_file_name = match.group(1).strip('![]') + '.md'
        if os.path.exists(link_file_name):
            with open(link_file_name, 'r', encoding='utf-8') as linked_file:
                return linked_file.read()
        else:
            # Keep the original wikilink if --keep-wikilinks is set, otherwise return an empty string
            return match.group(0) if keep_wikilinks else ''

    # First pass: Replace all valid wikilinks with the contents of their linked files
    updated_content = re.sub(wikilink_pattern, replace_link, content)

    # Second pass: Remove any remaining unresolved wikilinks (i.e., any wikilinks still present)
    if not keep_wikilinks:
        updated_content = re.sub(wikilink_pattern, '', updated_content)

    # By default, convert [[@citation]] to [@citation], unless --keep-citations is passed
    if not keep_citations:
        citation_pattern = r'\[\[(@[^@\]]+)\]\]'
        updated_content = re.sub(citation_pattern, r'[\1]', updated_content)

    # Write the updated content to the output file
    with open(output_file, 'w', encoding='utf-8') as output:
        output.write(updated_content)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Replace wikilinks with the content of the linked files, and optionally keep citations.")
    parser.add_argument('input_file', help="The input file containing wikilinks")
    parser.add_argument('output_file', help="The output file to write the updated content")
    parser.add_argument('--keep-wikilinks', action='store_true', help="Keep original wikilinks if files are not found")
    parser.add_argument('--keep-citations', action='store_true', help="Keep [[@citation]] format, default is to convert to [@citation]")
    args = parser.parse_args()

    replace_wikilinks_with_content(args.input_file, args.output_file, args.keep_wikilinks, args.keep_citations)
